version: "3.4"


services:
    nameserver:
        image: microservicedemo:latest
        working_dir: /home/MicroServiceDemo/nameServer
        entrypoint:
            - /bin/bash
            - -c
            - "git pull && mvn spring-boot:run"

        networks:
            - backend_network
        ports:
            - 1111:1111

        healthcheck:
            test: ["CMD-SHELL", "curl --fail http://localhost:1111/info"]
            interval: 2s
            timeout: 2s
            retries: 3
            start_period: 3m

        deploy:
            # Specify labels for the service. These labels will only be set on the service, and not on any containers for the service.
            labels:
                microservice.demo.nameserver: "This label will appear on the name server."

            # Either global (exactly one container per swarm node) or replicated (a specified number of containers).
            mode: replicated
            # If the service is replicated (which is the default), specify the number of containers that should be running at any given time.
            replicas: 1

            # networks:
            #     - overlay
            # Specify a service discovery method for external clients connecting to a swarm.
            endpoint_mode: vip

            update_config:
                # The number of containers to update at a time.
                parallelism: 2
                # The time to wait between updating a group of containers.
                delay: 10s
                # What to do if an update fails. One of continue, rollback, or pause (default: pause).
                failure_action: pause
                # Failure rate to tolerate during an update.
                max_failure_ratio: 0.5
                # Order of operations during updates.
                # One of stop-first (old task is stopped before starting new one),
                # or start-first (new task is started first, and the running tasks will briefly overlap).
                order: start-first


            restart_policy:
                # One of none, on-failure or any (default: any).
                condition: on-failure
                # How long to wait between restart attempts, specified as a duration (default: 0).
                delay: 5s
                # How many times to attempt to restart a container before giving up (default: never give up).
                max_attempts: 3
                # How long to wait before deciding if a restart has succeeded, specified as a duration (default: decide immediately).
                window: 3m


    tracecallback:
        image: microservicedemo:latest
        working_dir: /home/MicroServiceDemo/traceCallback
        entrypoint:
            - /bin/bash
            - -c
            - "git pull && mvn spring-boot:run"
        networks:
            - backend_network
        ports:
            - 6789:6789
        healthcheck:
            test: ["CMD-SHELL", "curl --fail http://localhost:6789/info"]
            interval: 2s
            timeout: 2s
            retries: 3
            start_period: 3m
        deploy:
            labels:
                microservice.demo.tracecallback: "This label will appear on the tracecallback."
            mode: replicated
            replicas: 1
            endpoint_mode: vip


    simpleclient:
        image: microservicedemo:latest
        working_dir: /home/MicroServiceDemo/simpleClient
        entrypoint:
            - /bin/bash
            - -c
            - "git pull && mvn spring-boot:run"
        networks:
            - backend_network
        ports:
            - 2222:2222
        healthcheck:
            test: ["CMD-SHELL", "curl --fail http://localhost:2222/info"]
            interval: 2s
            timeout: 2s
            retries: 3
            start_period: 3m
        deploy:
            labels:
                microservice.demo.simpleclient: "This label will appear on the simple client."
            mode: replicated
            replicas: 1
            endpoint_mode: vip


    complicatedclient:
        image: microservicedemo:latest
        working_dir: /home/MicroServiceDemo/complicatedClient
        entrypoint:
            - /bin/bash
            - -c
            - "git pull && mvn spring-boot:run"
        networks:
            - backend_network
        ports:
            - 3333:3333
        healthcheck:
            test: ["CMD-SHELL", "curl --fail http://localhost:3333/info"]
            interval: 2s
            timeout: 2s
            retries: 3
            start_period: 3m
        deploy:
            labels:
                microservice.demo.complicatedclient: "This label will appear on the complicated client."
            mode: replicated
            replicas: 1
            endpoint_mode: vip


    sidecar:
        image: microservicedemo:latest
        working_dir: /home/MicroServiceDemo/sidecar
        entrypoint:
            - /bin/bash
            - -c
            - "git pull && mvn spring-boot:run & && node number.js"
        networks:
            - backend_network
        ports:
            - 4444:4444
        healthcheck:
            test: ["CMD-SHELL", "curl --fail http://localhost:4444/info"]
            interval: 2s
            timeout: 2s
            retries: 3
            start_period: 3m
        deploy:
            labels:
                microservice.demo.sidecar: "This label will appear on the sidecar."
            mode: replicated
            replicas: 1
            endpoint_mode: vip

networks:
    backend_network:
        driver: overlay
